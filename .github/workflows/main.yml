name: Run Tests

on:
  pull_request:
    branches:
      - main  # Target branch for the tests
  push:
    branches:
      - main  # Run on push to main branch

jobs:
  test:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up JDK (Java Development Kit) - Required for Spring Boot
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'  # You can change this to your required Java version, like '8', '17', etc.

      # Step 3: Cache Maven dependencies to speed up subsequent builds
      - name: Cache Maven dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository  # Path to the Maven local repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Step 4: Install dependencies and run tests
      - name: Run Maven Build and Tests
        run: mvn clean install -DskipTests=false  # Runs tests and installs dependencies

      # Step 5: Upload Test Results (Optional)
      - name: Upload Test Results
        if: always()  # This ensures the results are uploaded even if the tests fail
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: target/test-classes  # Path to the test results (for Maven, it's typically under target/test-classes)

      # Optional: If you want to upload the JAR file after the build, you can add another upload artifact step
      - name: Upload JAR file (Optional)
        if: success()  # This ensures the artifact is uploaded only if the build succeeds
        uses: actions/upload-artifact@v3
        with:
          name: spring-boot-artifact
          path: target/*.jar  # Path to the packaged JAR file
