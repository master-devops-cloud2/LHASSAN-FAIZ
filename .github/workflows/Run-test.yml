name: Run test2

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Set up JDK (Java Development Kit)
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'   # Set the required Java version (can also use '8', '17', etc.)

      # Step 3: Cache Maven dependencies (optional, speeds up builds)
      - name: Cache Maven dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository  # Path to the Maven local repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Step 4: Install dependencies and run tests
      - name: Run Maven Build and Tests
        run: mvn clean install -DskipTests=false  # Run tests with Maven (you can skip tests with -DskipTests=true if needed)

      # Step 5: Package the Spring Boot application (optional)
      - name: Package Spring Boot application
        run: mvn package -DskipTests=true

      # Step 6: Upload build artifacts (optional, e.g., for deployment)
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: spring-boot-artifact
          path: target/*.jar  # Path to the built JAR file (can be used in deployment steps)

  # Optionally, add a deploy job after build
  deploy:
    runs-on: ubuntu-latest
    needs: build  # Ensure that deployment only happens if the build succeeds

    steps:
      # Step 1: Checkout the repository code (for deployment context)
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Deploy the JAR file (this could be any deployment logic you need)
      # Example: Upload to a server or deploy to cloud platforms like AWS, Heroku, etc.
      - name: Deploy to Production (example)
        run: |
          echo "Deploying application to the production server"
          scp target/*.jar user@server:/path/to/deploy
          ssh user@server "java -jar /path/to/deploy/application.jar"

